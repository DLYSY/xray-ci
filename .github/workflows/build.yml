name: Build

on:
  schedule:
  # 每周5 UTC 8:30运行
    - cron: '30 8 * * 5'
  push:
    branches: [ "main" ]

jobs:
  build-xray:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Generat Config
      shell: python
      working-directory: ./xray
      run: |
        from json import dump
        xray_conf = {
            "inbounds": [
                {
                    "port": 80,
                    "listen": "0.0.0.0",
                    "protocol": "vless",
                    "settings": {"clients": [{"id": ${{ secrets.CLIENT_ID }}}], "decryption": "none"},
                    "streamSettings": {"network": "xhttp", "security": "none"},
                    "xhttpSettings": {"path": "/", "mode": "stream-up"},
                }
            ],
            "outbounds": [{"protocol": "freedom"}],
        }
        with open("config.json", "w") as f:
            dump(xray_conf, f)

    # - name: Generat Config
    #   run: python3 ./generage_config.py ${{ secrets.CLIENT_ID }}
    #   working-directory: ./xray

    - name: Build Docker Image
      run: docker build -t ${{ secrets.ACR_URL }}/lysy-self/xray:xhttp .
      working-directory: ./xray

    - name: ACR login
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.ACR_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Push to ACR
      run: docker push ${{ secrets.ACR_URL }}/lysy-self/xray:xhttp

  build-v2rayn:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Download v2rayn
      shell: python
      working-directory: ./v2rayn
      run: |
        import requests
        import zipfile
        req = requests.get("https://api.github.com/repos/2dust/v2rayN/releases/latest")

        linux_asset_url = next(filter(lambda x: x["name"] == "v2rayN-linux-64.zip",req.json()["assets"]))["browser_download_url"]

        with open("v2rayn.zip","wb") as f:
            f.write(requests.get(linux_asset_url).content)

        with zipfile.ZipFile("v2rayn.zip","r") as f:
            f.extractall(".")
      
    # - name: Generat Config
    #   run: python ./download_v2rayn.py
    #   working-directory: ./v2rayn

    - name: Build Docker Image
      run: docker build -t quay.io/dlysy/v2rayn:web .
      working-directory: ./v2rayn

    - name: Quay login
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}

    - name: Push to Quay
      run: docker push quay.io/dlysy/v2rayn:web